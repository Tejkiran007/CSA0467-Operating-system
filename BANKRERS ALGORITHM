#include <stdio.h>

int main() {
  int n, m; 
  printf("Enter the number of processes: ");
  scanf("%d", &n);
  printf("Enter the number of resources: ");
  scanf("%d", &m);

  int allocation[n][m], max[n][m], available[m], need[n][m], safeSeq[n], work[m], finish[n];
  int i, j, k, count = 0;

  printf("\nEnter the allocation matrix:\n");
  for(i=0; i<n; i++) {
    for(j=0; j<m; j++) {
      scanf("%d", &allocation[i][j]);
    }
  }

  printf("\nEnter the maximum matrix:\n");
  for(i=0; i<n; i++) {
    for(j=0; j<m; j++) {
      scanf("%d", &max[i][j]);
      need[i][j] = max[i][j] - allocation[i][j];
    }
  }

  printf("\nEnter the available matrix:\n");
  for(i=0; i<m; i++) {
    scanf("%d", &available[i]);
    work[i] = available[i];
  }

  for(i=0; i<n; i++) {
    finish[i] = 0;
  }

  while(count < n) {
    int found = 0;
    for(i=0; i<n; i++) {
      if(!finish[i]) {
        int canRun = 1;
        for(j=0; j<m; j++) {
          if(need[i][j] > work[j]) {
            canRun = 0;
            break;
          }
        }
        if(canRun) {
          for(k=0; k<m; k++) {
            work[k] += allocation[i][k];
          }
          safeSeq[count++] = i;
          finish[i] = 1;
          found = 1;
        }
      }
    }
    if(!found) {
      printf("\nUnsafe state - system cannot allocate resources!");
      break;
    }
  }

  if(count == n) {
    printf("\nSafe sequence: ");
    for(i=0; i<n; i++) {
      printf("%d ", safeSeq[i]);
    }
  }

  return 0;
}
